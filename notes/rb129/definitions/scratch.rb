class GoodDog
  attr_accessor :name, :height, :weight

  def initialize(n, h, w)
    @name = n
    @height = h
    @weight = w
  end

  def speak
    "#{name} says arf!"
  end

  def change_info(n, h, w)
    name=(n)
    height = h
    weight = w
  end

  def info
    "#{name} weighs #{weight} and is #{height} tall."
  end
end

sparky = GoodDog.new("Sparky", "12 inches", "24 lbs")

sparky.change_info('Spartacus', '24 inches', '45 lbs')

puts sparky.info      
# => Sparky weighs 10 lbs and is 12 inches tall.

# Why does the .change_info method not work as expected here?

=begin
The problem with the `change_info` instance method in our `GoodDog` class
is that rather than calling the setter methods (generated by the call
to `Module#attr_accessor` on line 2)) `name=`, `height=` and `weight=`,
`change_info` currently initializes three new
local variables on lines 15-17, called `name`, `height` and `weight`.

In order to disambiguate the calls to the setter methods from 
=end